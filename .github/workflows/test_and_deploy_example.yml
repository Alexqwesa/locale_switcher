# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test + Deploy Web App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.4.0

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          # flutter-version: 2.14
          channel: 'stable'
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Version
        run: flutter doctor -v
      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      - name: install lcov
        run: sudo apt-get install -y lcov sed
      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Prepare and Run tests
        run: |
          # cp -a example/test/*.dart test/
          # sed "s@^import '../lib/main@import '../example/lib/main@g" test/* -i
          flutter test --coverage

      - name: Cleanup coverage
        run: |
          lcov --remove coverage/lcov.info 'lib/src/l10n/*' 'lib/src/generated/*' 'lib/src/stubs_for_testing/*' -o coverage/lcov.info
          # genhtml coverage/lcov.info --output=coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Build locale_switcher
        run: |
          rm -rf 'docs/'
          cd example/
          flutter build web --release lib/main_with_dynamic_options.dart --base-href /locale_switcher/
          mv 'build/web/' '../docs/'

      - name: Commit files
        run: |
          git config --local user.email "Auto@test.com"
          git config --local user.name "Auto"
          git add docs
          git commit -a -m "[Auto] Update online example"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze
